{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "githubToken": {
            "type": "securestring",
            "metadata": {
                "description": "GitHub PAT with repo and workflow permissions for backend deployment"
            }
        },
        "sqlAdminUsername": {
            "type": "string",
            "metadata": {
                "description": "The administrator username of the SQL Server."
            }
        },
        "sqlAdminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "The administrator password of the SQL Server."
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "centralus",
            "metadata": {
                "description": "Location for all resources (defaults to centralus)."
            }
        },
        "frontendLocation": {
            "type": "string",
            "defaultValue": "eastus2",
            "metadata": {
                "description": "Location for frontend resources."
            }
        },
        "sqlServerName": {
            "type": "string",
            "defaultValue": "ehr-server",
            "metadata": {
                "description": "The name of the SQL Server to create."
            }
        },
        "databaseName": {
            "type": "string",
            "defaultValue": "ehr-database",
            "metadata": {
                "description": "The name of the database to create."
            }
        },
        "skuName": {
            "type": "string",
            "defaultValue": "Basic",
            "metadata": {
                "description": "The SKU name for the database (e.g., Basic, Standard, Premium)."
            }
        },
        "siteName": {
            "type": "string",
            "defaultValue": "TheHospitalFrontEnd",
            "metadata": {
                "description": "The name of the static web app."
            }
        },
        "frontendSku": {
            "type": "string",
            "defaultValue": "Free",
            "metadata": {
                "description": "The SKU of the static web app."
            }
        },
        "repositoryUrl": {
            "type": "string",
            "defaultValue": "https://github.com/amerali003/TheHospitalFrontEnd.git",
            "metadata": {
                "description": "The URL of the GitHub repository."
            }
        },
        "branch": {
            "type": "string",
            "defaultValue": "main",
            "metadata": {
                "description": "The branch of the GitHub repository."
            }
        },
        "appLocation": {
            "type": "string",
            "defaultValue": "/",
            "metadata": {
                "description": "The location of the app in the repository."
            }
        },
        "apiLocation": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "The location of the API in the repository."
            }
        },
        "appArtifactLocation": {
            "type": "string",
            "defaultValue": "build",
            "metadata": {
                "description": "The location of the build output."
            }
        }
    },
    "variables": {
        "webAppName": "TheBackEndApp002",
        "appServicePlanName": "[concat('ASP-', variables('webAppName'))]",
        "backendRepoUrl": "https://github.com/amerali003/TheHospitalBackEnd.git",
        "javaVersion": "8",
        "backendSku": "F1"
    },
    "resources": [
        // Database Resources
        {
            "type": "Microsoft.Sql/servers",
            "apiVersion": "2021-11-01",
            "name": "[parameters('sqlServerName')]",
            "location": "[parameters('location')]",
            "properties": {
                "administratorLogin": "[parameters('sqlAdminUsername')]",
                "administratorLoginPassword": "[parameters('sqlAdminPassword')]",
                "version": "12.0"
            },
            "resources": [
                {
                    "type": "firewallRules",
                    "apiVersion": "2021-11-01",
                    "name": "AllowAllAzureIPs",
                    "location": "[parameters('location')]",
                    "properties": {
                        "startIpAddress": "0.0.0.0",
                        "endIpAddress": "0.0.0.0"
                    },
                    "dependsOn": [
                        "[resourceId('Microsoft.Sql/servers', parameters('sqlServerName'))]"
                    ]
                }
            ]
        },
        {
            "type": "Microsoft.Sql/servers/databases",
            "apiVersion": "2021-11-01",
            "name": "[concat(parameters('sqlServerName'), '/', parameters('databaseName'))]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "[parameters('skuName')]",
                "tier": "[parameters('skuName')]"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('sqlServerName'))]"
            ]
        },
        {
            "type": "Microsoft.Resources/deploymentScripts",
            "apiVersion": "2020-10-01",
            "name": "createTables",
            "location": "[parameters('location')]",
            "kind": "AzurePowerShell",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('sqlServerName'), parameters('databaseName'))]"
            ],
            "properties": {
                "azPowerShellVersion": "8.3",
                "scriptContent": "[concat('$serverName = $Env:sqlServerName;\n$databaseName = $Env:databaseName;\n$adminUsername = $Env:sqlAdminUsername;\n$adminPassword = $Env:sqlAdminPassword;\n\n$connectionString = \"Server=tcp:$serverName.database.windows.net,1433;Initial Catalog=$databaseName;Persist Security Info=False;User ID=$adminUsername;Password=$adminPassword;MultipleActiveResultSets=False;Encrypt=True;TrustServerCertificate=False;Connection Timeout=30;\";\n\n$sqlCommand = @\"\nCREATE TABLE dbo.doctor (\n    id INT PRIMARY KEY NOT NULL,\n    doctor_name VARCHAR(255),\n    emergency_phone VARCHAR(50),\n    main_major_name VARCHAR(255),\n    sub_major_name VARCHAR(255),\n    age INT NOT NULL,\n    gender VARCHAR(50)\n);\n\nCREATE TABLE dbo.patient (\n    id INT PRIMARY KEY NOT NULL,\n    address VARCHAR(255),\n    age INT NOT NULL,\n    email VARCHAR(255),\n    gender VARCHAR(50),\n    name VARCHAR(255),\n    phone VARCHAR(50)\n);\n\nCREATE TABLE dbo.appointment (\n    id INT PRIMARY KEY NOT NULL,\n    appointment_date VARCHAR(50),\n    appointment_time VARCHAR(50),\n    doctor_name VARCHAR(255),\n    location VARCHAR(255),\n    patient_id VARCHAR(50),\n    doctor_id INT,\n    FOREIGN KEY (doctor_id) REFERENCES dbo.doctor(id)\n);\n\"@\n\n$connection = New-Object System.Data.SqlClient.SqlConnection($connectionString);\n$connection.Open();\n$command = New-Object System.Data.SqlClient.SqlCommand($sqlCommand, $connection);\n$command.ExecuteNonQuery();\n$connection.Close();')]",
                "environmentVariables": [
                    {
                        "name": "sqlServerName",
                        "value": "[parameters('sqlServerName')]"
                    },
                    {
                        "name": "databaseName",
                        "value": "[parameters('databaseName')]"
                    },
                    {
                        "name": "sqlAdminUsername",
                        "value": "[parameters('sqlAdminUsername')]"
                    },
                    {
                        "name": "sqlAdminPassword",
                        "value": "[parameters('sqlAdminPassword')]"
                    }
                ],
                "cleanupPreference": "OnSuccess",
                "retentionInterval": "P1D"
            }
        },
        
        // Frontend Resources
        {
            "type": "Microsoft.Web/staticSites",
            "apiVersion": "2021-01-15",
            "name": "[parameters('siteName')]",
            "location": "[parameters('frontendLocation')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('sqlServerName'), parameters('databaseName'))]"
            ],
            "sku": {
                "name": "[parameters('frontendSku')]",
                "tier": "[parameters('frontendSku')]"
            },
            "properties": {
                "repositoryUrl": "[parameters('repositoryUrl')]",
                "branch": "[parameters('branch')]",
                "repositoryToken": "[parameters('githubToken')]",
                "buildProperties": {
                    "appLocation": "[parameters('appLocation')]",
                    "apiLocation": "[parameters('apiLocation')]",
                    "appArtifactLocation": "[parameters('appArtifactLocation')]"
                }
            }
        },
        
        // Backend Resources
        {
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "2022-03-01",
            "name": "[variables('appServicePlanName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('sqlServerName'), parameters('databaseName'))]"
            ],
            "sku": {
                "name": "[variables('backendSku')]",
                "tier": "Free",
                "size": "F1",
                "family": "F",
                "capacity": 1
            },
            "kind": "linux",
            "properties": {
                "reserved": true
            }
        },
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2022-03-01",
            "name": "[variables('webAppName')]",
            "location": "[parameters('location')]",
            "kind": "app,linux",
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
                "[resourceId('Microsoft.Resources/deploymentScripts', 'createTables')]"
            ],
            "properties": {
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
                "siteConfig": {
                    "linuxFxVersion": "[concat('JAVA|', variables('javaVersion'))]",
                    "appSettings": [
                        {
                            "name": "WEBSITE_RUN_FROM_PACKAGE",
                            "value": "1"
                        },
                        {
                            "name": "SQL_SERVER_NAME",
                            "value": "[parameters('sqlServerName')]"
                        },
                        {
                            "name": "SQL_DATABASE_NAME",
                            "value": "[parameters('databaseName')]"
                        },
                        {
                            "name": "SQL_ADMIN_USERNAME",
                            "value": "[parameters('sqlAdminUsername')]"
                        },
                        {
                            "name": "SQL_ADMIN_PASSWORD",
                            "value": "[parameters('sqlAdminPassword')]"
                        }
                    ]
                }
            },
            "resources": [
                {
                    "type": "sourcecontrols",
                    "apiVersion": "2022-03-01",
                    "name": "web",
                    "dependsOn": [
                        "[resourceId('Microsoft.Web/sites', variables('webAppName'))]"
                    ],
                    "properties": {
                        "repoUrl": "[variables('backendRepoUrl')]",
                        "branch": "[parameters('branch')]",
                        "isManualIntegration": false,
                        "deploymentRollbackEnabled": true,
                        "isMercurial": false,
                        "githubActionConfiguration": {
                            "codeConfiguration": {
                                "runtimeStack": "java",
                                "runtimeVersion": "[variables('javaVersion')]"
                            },
                            "generateWorkflowFile": true
                        }
                    }
                }
            ]
        }
    ],
    "outputs": {
        "frontendUrl": {
            "type": "string",
            "value": "[concat(parameters('siteName'), '.azurestaticapps.net')]"
        },
        "backendUrl": {
            "type": "string",
            "value": "[concat('https://', variables('webAppName'), '.azurewebsites.net')]"
        },
        "sqlServerName": {
            "type": "string",
            "value": "[parameters('sqlServerName')]"
        },
        "databaseName": {
            "type": "string",
            "value": "[parameters('databaseName')]"
        }
    }
}